import React, { useState, useEffect } from 'react';

const beers = [
  {
    id: 1,
    name: "–•–º–µ–ª—å–Ω–æ–π –ó–∞–∫–∞—Ç",
    desc: "–¶–∏—Ç—Ä—É—Å–æ–≤—ã–π IPA —Å –Ω–æ—Ç–∫–∞–º–∏ –≥—Ä–µ–π–ø—Ñ—Ä—É—Ç–∞ –∏ —Ö–≤–æ–∏. –ö—Ä–µ–ø–∫–∏–π, –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π, —Å –≥–æ—Ä—á–∏–Ω–∫–æ–π.",
    abv: "6.8%",
    price: 12.9,
    img: "https://images.unsplash.com/photo-1546173159-2ed430595600?w=400&auto=format&fit=crop&q=80",
  },
  {
    id: 2,
    name: "–õ–µ—Å–Ω–æ–π –≠–ª—å",
    desc: "–¢–µ–º–Ω—ã–π —ç–ª—å —Å –∞—Ä–æ–º–∞—Ç–æ–º –∫–∞—Ä–∞–º–µ–ª–∏, –∫–æ—Ñ–µ –∏ –ª–µ–≥–∫–æ–π –¥—ã–º–Ω–æ—Å—Ç–∏. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è –≤–µ—á–µ—Ä–∞.",
    abv: "5.5%",
    price: 11.5,
    img: "https://images.unsplash.com/photo-1577995596872-444a6d77c05d?w=400&auto=format&fit=crop&q=80",
  },
  {
    id: 3,
    name: "–ö–∞–∞—Ä—Å—Ç—Å–∫–∏–π –õ–∞–≥–µ—Ä",
    desc: "–ß–∏—Å—Ç—ã–π, —Å–≤–µ–∂–∏–π –ª–∞–≥–µ—Ä —Å –ª–µ–≥–∫–æ–π —Ö—Ä—É—Å—Ç—è—â–µ–π –≥–æ—Ä—á–∏–Ω–∫–æ–π. –ü—å–µ—Ç—Å—è –∫–∞–∫ –≤–æ–¥–∞ ‚Äî –Ω–æ –≤–∫—É—Å–Ω–µ–µ!",
    abv: "4.9%",
    price: 9.9,
    img: "https://images.unsplash.com/photo-1540277113249-39a8b7da3d7f?w=400&auto=format&fit=crop&q=80",
  },
  {
    id: 4,
    name: "–Ø–≥–æ–¥–Ω—ã–π –ì–æ—Å—Å–µ",
    desc: "–ö–∏—Å–ª–æ-—Å–ª–∞–¥–∫–∏–π –±–µ—Ä–ª–∏–Ω—Å–∫–∏–π –≤–∞–π—Å —Å –º–∞–ª–∏–Ω–æ–π –∏ –µ–∂–µ–≤–∏–∫–æ–π. –û—Å–≤–µ–∂–∞–µ—Ç –¥–∞–∂–µ –≤ –∂–∞—Ä—É.",
    abv: "4.2%",
    price: 13.5,
    img: "https://images.unsplash.com/photo-1605559424837-22b1a9a7f68e?w=400&auto=format&fit=crop&q=80",
  },
];

const App = () => {
  const [heroText, setHeroText] = useState('');
  const [isLoaded, setIsLoaded] = useState(false);
  const [cart, setCart] = useState([]);
  const [menuOpen, setMenuOpen] = useState(false);
  const [orderForm, setOrderForm] = useState({ name: '', phone: '', comment: '' });
  const [orderSent, setOrderSent] = useState(false);

  // –ê–Ω–∏–º–∞—Ü–∏—è Hero
  useEffect(() => {
    const punchline = "–ü–∏–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≥–æ–≤–æ—Ä–∏—Ç —Å —Ç–æ–±–æ–π üçª";
    let i = 0;
    const timer = setInterval(() => {
      setHeroText(punchline.slice(0, ++i));
      if (i === punchline.length) clearInterval(timer);
    }, 80);
    setTimeout(() => setIsLoaded(true), 1500);
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ localStorage
  useEffect(() => {
    const saved = localStorage.getItem('cart');
    if (saved) setCart(JSON.parse(saved));
  }, []);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
  useEffect(() => {
    localStorage.setItem('cart', JSON.stringify(cart));
  }, [cart]);

  const addToCart = (beer) => {
    setCart(prev => {
      const existing = prev.find(item => item.id === beer.id);
      if (existing) {
        return prev.map(item =>
          item.id === beer.id ? { ...item, qty: item.qty + 1 } : item
        );
      }
      return [...prev, { ...beer, qty: 1 }];
    });
  };

  const removeFromCart = (id) => {
    setCart(prev => prev.filter(item => item.id !== id));
  };

  const getTotal = () => {
    return cart.reduce((sum, item) => sum + item.price * item.qty, 0).toFixed(2);
  };

  const handleOrderChange = (e) => {
    setOrderForm({ ...orderForm, [e.target.name]: e.target.value });
  };

  const submitOrder = (e) => {
    e.preventDefault();
    if (!orderForm.name || !orderForm.phone) {
      alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω!');
      return;
    }
    console.log('–ó–∞–∫–∞–∑:', { ...orderForm, cart });
    setOrderSent(true);
    setCart([]);
    setTimeout(() => setOrderSent(false), 3000);
  };

  return (
    <div className="app">
      {/* HEADER */}
      <header className="header">
        <div className="container">
          <h1>Craftik Beer</h1>
          <div className="nav-desktop">
            <a href="#beers">–ü–∏–≤–æ</a>
            <a href="#map">–î–æ—Å—Ç–∞–≤–∫–∞</a>
            <a href="#order">–ó–∞–∫–∞–∑</a>
          </div>
          <div className="nav-mobile">
            <button onClick={() => setMenuOpen(!menuOpen)} className="burger">
              ‚ò∞
            </button>
            {menuOpen && (
              <div className="mobile-menu">
                <a href="#beers" onClick={() => setMenuOpen(false)}>–ü–∏–≤–æ</a>
                <a href="#map" onClick={() => setMenuOpen(false)}>–î–æ—Å—Ç–∞–≤–∫–∞</a>
                <a href="#order" onClick={() => setMenuOpen(false)}>–ó–∞–∫–∞–∑</a>
              </div>
            )}
          </div>
          <div className="cart-icon" onClick={() => document.getElementById('cart').scrollIntoView()}>
            üõí {cart.reduce((sum, item) => sum + item.qty, 0)}
          </div>
        </div>
      </header>

      {/* HERO */}
      <section className="hero">
        <div className="hero-bg"></div>
        <div className="container hero-content">
          <h2 className="hero-punch">{heroText}</h2>
          <p className="hero-subtitle">–°–≤–µ–∂–µ–µ –∫—Ä–∞—Ñ—Ç–æ–≤–æ–µ –ø–∏–≤–æ —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã ‚Äî –ø—Ä—è–º–æ –≤ –ö–∞–∞—Ä—Å—Ç–µ. –ó–∞–∫–∞–∂–∏ —Å–µ–π—á–∞—Å ‚Äî –ø—Ä–∏–≤–µ–∑–µ–º –∑–∞ 30 –º–∏–Ω—É—Ç.</p>
          <button className="cta-btn" onClick={() => document.getElementById('beers').scrollIntoView()}>–í—ã–±—Ä–∞—Ç—å –ø–∏–≤–æ ‚Üí</button>
        </div>
      </section>

      {/* BEERS */}
      <section id="beers" className="beers-section">
        <div className="container">
          <h2 className="section-title">–ù–∞—à–∏ —Å–æ—Ä—Ç–∞</h2>
          <div className="beers-grid">
            {beers.map((beer, idx) => (
              <div key={beer.id} className={`beer-card ${isLoaded ? 'fade-in' : ''}`} style={{ animationDelay: `${idx * 0.2}s` }}>
                <img src={beer.img} alt={beer.name} loading="lazy" />
                <div className="beer-info">
                  <h3>{beer.name}</h3>
                  <p className="beer-desc">{beer.desc}</p>
                  <div className="beer-meta">
                    <span>{beer.abv}</span>
                    <strong>{beer.price.toFixed(2)}‚Ç¨</strong>
                  </div>
                  <button className="beer-btn" onClick={() => addToCart(beer)}>–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CART */}
      <section id="cart" className="cart-section">
        <div className="container">
          <h2 className="section-title">–í–∞—à –∑–∞–∫–∞–∑</h2>
          {cart.length === 0 ? (
            <p className="empty-cart">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –í—ã–±–µ—Ä–∏—Ç–µ –ø–∏–≤–æ –≤—ã—à–µ üç∫</p>
          ) : (
            <>
              <div className="cart-items">
                {cart.map(item => (
                  <div key={item.id} className="cart-item">
                    <span>{item.name} √ó {item.qty}</span>
                    <span>{(item.price * item.qty).toFixed(2)}‚Ç¨</span>
                    <button onClick={() => removeFromCart(item.id)} className="remove-btn">√ó</button>
                  </div>
                ))}
              </div>
              <div className="cart-total">–ò—Ç–æ–≥–æ: <strong>{getTotal()}‚Ç¨</strong></div>
            </>
          )}
        </div>
      </section>

      {/* MAP */}
      <section id="map" className="map-section">
        <div className="container">
          <h2 className="section-title">–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ö–∞–∞—Ä—Å—Ç—É</h2>
          <div className="map-container">
            <iframe
              src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2540.226785655768!2d6.671286415738263!3d51.19494997956579!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47b8e5e7c5a5e5e5%3A0x5a5a5a5a5a5a5a5a!2sKaarst%2C%20Germany!5e0!3m2!1sen!2sus!4v1710000000000!5m2!1sen!2sus"
              width="100%"
              height="400"
              style={{ border: 0, borderRadius: '16px' }}
              allowFullScreen=""
              loading="lazy"
            ></iframe>
          </div>
        </div>
      </section>

      {/* ORDER FORM */}
      <section id="order" className="order-section">
        <div className="container">
          <h2 className="section-title">–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</h2>
          {orderSent ? (
            <div className="success-message">‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! –ú—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç.</div>
          ) : (
            <form onSubmit={submitOrder} className="order-form">
              <input
                type="text"
                name="name"
                placeholder="–í–∞—à–µ –∏–º—è"
                value={orderForm.name}
                onChange={handleOrderChange}
                required
              />
              <input
                type="tel"
                name="phone"
                placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                value={orderForm.phone}
                onChange={handleOrderChange}
                required
              />
              <textarea
                name="comment"
                placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–∞–¥—Ä–µ—Å, —ç—Ç–∞–∂, –∫–æ–¥ –∏ —Ç.–¥.)"
                value={orderForm.comment}
                onChange={handleOrderChange}
                rows="3"
              ></textarea>
              <button type="submit" className="order-btn">–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üçª</button>
            </form>
          )}
        </div>
      </section>

      {/* FOOTER */}
      <footer className="footer">
        <div className="container">
          <p>¬© 2025 Craftik Beer ‚Äî –ö–∞–∞—Ä—Å—Ç. –ü–∏–≤–æ —Å –¥—É—à–æ–π –∏ —Ö–º–µ–ª–µ–º üçª</p>
          <p>–î–æ—Å—Ç–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 16:00 –¥–æ 23:00</p>
        </div>
      </footer>
    </div>
  );
};

export default App;
